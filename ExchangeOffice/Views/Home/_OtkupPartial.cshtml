@using System.Linq;
@model ExchangeOffice.ViewModels.OtkupViewModel

@{
    var listaValuta = Model.Valute.Select(it => new SelectListItem() { Text = it.Sifra, Value = it.Sifra }).ToList();
}
<div class="modal-dialog" role="document">

    <div class="modal-content">

        <div class="modal-header" style="color:#fff; background-color: #0069d9;">
            <h5 class="modal-title">Otkup</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>

        <div class="modal-body" id="otkupModalBody">

            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group row">
                @Html.LabelFor(model => model.SifraValuta, new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.DropDownListFor(model => model.SifraValuta, new List<SelectListItem>(listaValuta), new { @class = "form-control", id = "otkup_SifraValuta" })
                    @Html.ValidationMessageFor(model => model.SifraValuta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Iznos, new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.Iznos, new { htmlAttributes = new { @class = "form-control", id = "otkup_Iznos" } })
                    @Html.ValidationMessageFor(model => model.Iznos, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Rezultat, new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.Rezultat, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", id = "otkup_Rezultat" } })
                    @Html.ValidationMessageFor(model => model.Rezultat, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Odustani</button>
            <button type="submit" class="btn btn-primary">Izvrsi</button>
        </div>
    </div>
</div>

